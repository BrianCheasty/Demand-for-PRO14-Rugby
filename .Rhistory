library(dplyr)
library(ggplot2)
install.packages("psych")
library(psych)
library(tidyverse)
install.packages('kableExtra')
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
sigma(model1)/mean(games$Attendance)
step(model1, direction = "back", scope = formula(model1))
model2 <- lm(formula = Attendance ~ Tournament + Home.Team + Venue + Away.Table.Position +
Away.Last_5_W.L + Rain.Level + Home.Win.Loss.in.Comp + Day.Of.Week +
Kick.Off.Hour + Derby + Number.ofEPCR.Wins + Years.sinceP14.Win +
Stadium.Age + Wind, data = games)
summary(model2)
sigma(model2)
sigma(model2)/mean(games$Attendance)
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
sigma(model1)/mean(games$Attendance)
step(model1, direction = "back", scope = formula(model1))
model2 <- lm(formula = Attendance ~ Tournament + Home.Team + Venue + Away.Table.Position +
Away.Last_5_W.L + Rain.Level + Home.Win.Loss.in.Comp + Day.Of.Week +
Kick.Off.Hour + Derby + Number.ofEPCR.Wins + Years.sinceP14.Win +
Stadium.Age + Wind, data = games)
summary(model2)
sigma(model2)
sigma(model2)/mean(games$Attendance)
library(dplyr)
library(ggplot2)
install.packages("psych")
library(psych)
library(tidyverse)
install.packages('kableExtra')
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/MunsterData for Model.csv",sep=",")
model1 <- lm(NAttendance ~ ., data=games)
summary(model1)
sigma(model1)/mean(games$NAttendance)
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
model1 <- lm(NAttendance ~ ., data=games)
summary(model1)
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
sigma(model1)/mean(games$NAttendance)
model1 <- lm(Attendance ~ ., data=games)
sigma(model1)/mean(games$Attendance)
train <- games[1:500,]
test <- games[501,596,]
model1 <- lm(Attendance ~ ., data=train)
summary(model1)
sigma(model1)/mean(games$Attendance)
sigma(model1)/mean(train$Attendance)
predict(model1,test,se.fit = TRUE)
train <- games[1:550,]
test <- games[551,596,]
model1 <- lm(Attendance ~ ., data=train)
summary(model1)
sigma(model1)/mean(train$Attendance)
predict(model1,test,se.fit = TRUE)
predict(model1,test,se.fit = TRUE)
pred.w.plim <- predict(model1, test, interval = "prediction")
pred.w.clim <- predict(model1, test, interval = "confidence")
matplot(test$Attendance, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
matplot(test$Attendance, cbind(pred.w.clim, pred.w.plim[,-1]))
prediction <- predict(model1,test,se.fit = TRUE)
predict(model1,test)#,se.fit = TRUE)
test <- games[551,596,]
test <- games[551:596,]
predict(model1,test)#,se.fit = TRUE)
predict(model1,test$Attendance)#,se.fit = TRUE)
predict(model1,test,se.fit = TRUE)
train <- games[1:550,]
test <- games[551:596,]
model1 <- lm(Attendance ~ ., data=train)
summary(model1)
sigma(model1)/mean(train$Attendance)
predict(model1,test,se.fit = TRUE)
library(dplyr)
library(ggplot2)
install.packages("psych")
library(psych)
library(tidyverse)
install.packages('kableExtra')
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
sigma(model1)/mean(train$Attendance)
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
sigma(model1)/mean(train$Attendance)
library(dplyr)
library(ggplot2)
install.packages("psych")
library(psych)
library(tidyverse)
install.packages('kableExtra')
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
summary(model1)
sigma(model1)
sigma(model1)/mean(games$Attendance)
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
summary(model1)
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
normalize	<-	function(x)	{
return((x	-	min(x))	/	(max(x)	-	min(x)))
}
concrete_norm	<-	as.data.frame(lapply(games,	normalize))
#Nueral Network
games2 <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model with dummy.csv",sep=",")
games_norm	<-	as.data.frame(lapply(games2,	normalize))
train <- games_norm[1:480,]
test <- games_norm[481:560,]
#Nueral Network
install.packages("neuralnet")
library(neuralnet)
#Nueral Network
install.packages('neuralnet')
library(neuralnet)
games_model	<-	neuralnet(Attendance	~	.,data	=	train)
plot(games_model)
model_results <- compute(games_model, test)
predicted_attendace <- model_results$net.result
cor(predicted_attendance, test$attendance)
predicted_attendance <- model_results$net.result
cor(predicted_attendance, test$attendance)
plot(games_model)
games_model	<-	neuralnet(Attendance	~	.,data	=	train,hidden=5)
plot(games_model)
plot(games_model)
model_results <- compute(games_model, test[1:8])
model_results <- compute(games_model, test)
predicted_attendance <- model_results$net.result
cor(predicted_attendance, test$attendance)
View(predicted_attendance)
View(predicted_attendance)
View(test)
view(model_results)
view(predicted_attendance)
view(predicted_attendance)
check <- games_norm[1:8]
view(check)
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
sigma(model1)
sigma(model1)/mean(games$Attendance)
step(model1, direction = "back", scope = formula(model1))
model2 <- lm(formula = Attendance ~ Tournament + Home.Team + Venue + Home.Table.Position +
Away.Table.Position + Max.Temperature + Rain.Level + Home.Win.Loss.in.Comp +
Home.Total.P + Day.Of.Week + Month.of.Year + Kick.Off.Hour +
Home.Winning.Percentage + Derby + Years.sinceP14.Win + Years.sinceEPCR.Win +
Table.Difference + Uncertainty, data = games)
summary(model2)
sigma(model2)
sigma(model2)/mean(games$Attendance)
games_model	<-	neuralnet(Attendance	~	Attendance ~ Tournament + Home.Team + Venue + Home.Table.Position +
Away.Table.Position + Max.Temperature + Rain.Level + Home.Win.Loss.in.Comp +
Home.Total.P + Day.Of.Week + Month.of.Year + Kick.Off.Hour +
Home.Winning.Percentage + Derby + Years.sinceP14.Win + Years.sinceEPCR.Win +
Table.Difference + Uncertainty,data	=	train,hidden=5)
games_model	<-	neuralnet(Attendance	~	.,data	=	train,hidden=5)
plot(games_model)
view(test$Attendance)
view(predicted_attendance,test$Attendance)
#data is Munster Model or Data for Model
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Munster Model.csv",sep=",")
#data is Munster Model or Data for Model
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Munster Model.csv",sep=",")
model1 <- lm(Attendance ~ ., data=games)
summary(model1)
sigma(model1)
sigma(model1)/mean(games$Attendance)
train <- games[1:550,]
view(games)
games2 <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Munster2 Model.csv",sep=",")
normalize	<-	function(x)	{
return((x	-	min(x))	/	(max(x)	-	min(x)))
}
games_norm	<-	as.data.frame(lapply(games2,	normalize))
train <- games_norm[1:40,]
test <- games_norm[41:50,]
games_model	<-	neuralnet(Attendance	~	.,data	=	train,hidden=5)
games_model	<-	neuralnet(Attendance	~	.,data	=	train,hidden=2)
games_model	<-	neuralnet(Attendance	~	.,data	=	train)
view(train)
games2[ , colsums(is.na(games2))==0]
games2[ , colSums(is.na(games2))==0]
games2<-games2[ , colSums(is.na(games2))==0]
library(dplyr)
games2 %>%
select_if(~ !any(is.na(.)))
games2 <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Munster2 Model.csv",sep=",")
newdf <- t(na.omit(t(games2)))
games2 <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Munster2 Model.csv",sep=",")
view(games2)
normalize	<-	function(x)	{
return((x	-	min(x))	/	(max(x)	-	min(x)))
}
games_norm	<-	as.data.frame(lapply(games2,	normalize))
library(dplyr)
games_norm %>%
select_if(~ !any(is.na(.)))
view(games_norm)
train <- games_norm[1:40,]
test <- games_norm[41:50,]
games_model	<-	neuralnet(Attendance	~	.,data	=	train)
view(train)
view(games_norm)
games_norm[ , colSums(is.na(games_norm)) == 0]
new<-games_norm[ , colSums(is.na(games_norm)) == 0]
train <- new[1:40,]
test <- new[41:50,]
games_model	<-	neuralnet(Attendance	~	.,data	=	train)
plot(games_model)
model_results <- compute(games_model, test)
predicted_attendance <- model_results$net.result
cor(predicted_attendance, test$attendance)
view(predicted_attendance,test$Attendance)
View(test)
#data is Munster Model or Data for Model
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Munster Model.csv",sep=",")
train <- games[1:550,]
test <- games[551:596,]
train <- games[1:40,]
test <- games[41:50,]
model1 <- lm(Attendance ~ ., data=train)
predict(model1,test,se.fit = TRUE)
#data is Munster Model or Data for Model
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Munster Model.csv",sep=",")
train <- games[1:40,]
test <- games[41:50,]
model1 <- lm(Attendance ~ ., data=train)
#data is Munster Model or Data for Model
games <-  read.csv("C:/Users/bcheasty/OneDrive - Athlone Institute Of Technology/Research Project/Data Set Creation/Data/Feature Creation/Data for Model.csv",sep=",")
train <- games[1:550,]
test <- games[551:560,]
model1 <- lm(Attendance ~ ., data=train)
sigma(model1)/mean(games$Attendance)
predict(model1,test,se.fit = TRUE)
train <- games[1:500,]
test <- games[501:560,]
model1 <- lm(Attendance ~ ., data=train)
predict(model1,test,se.fit = TRUE)
train <- games[1:440,]
test <- games[441:560,]
model1 <- lm(Attendance ~ ., data=train)
predict(model1,test,se.fit = TRUE)
set.seed(100)
train <- sample(nrow(games),0.7*nrow(games),
replace=FALSE)
TrainSet <-  data1[train,]
ValidSet <- data1[-train,]
model1 <- lm(Attendance ~ ., data=TrainSet)
TrainSet <-  games[train,]
ValidSet <- games[-train,]
model1 <- lm(Attendance ~ ., data=TrainSet)
summary(model1)
sigma(model1)
sigma(model1)/mean(games$Attendance)
predict(model1,ValidSet,se.fit = TRUE)
train <- sample(nrow(games),0.8*nrow(games),
replace=FALSE)
TrainSet <-  games[train,]
ValidSet <- games[-train,]
model1 <- lm(Attendance ~ ., data=TrainSet)
summary(model1)
sigma(model1)
sigma(model1)/mean(games$Attendance)
predict(model1,ValidSet,se.fit = TRUE)
